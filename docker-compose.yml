version: '2'
services:
  mongodb:
    image: 'mongo:3.4'
    restart: always
  registry:
    image: 'consul:1.0.6'
    volumes:
      - './data/consul:/consul/data'
    command: agent -server -bootstrap-expect=1 -ui -client 0.0.0.0
    environment:
      - 'CONSUL_LOCAL_CONFIG={"leave_on_terminate": true}'
    restart: always
    deploy:
      labels:
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        - traefik.frontend.auth.basic.users=${USERNAME?Variable USERNAME not set}:${HASHED_PASSWORD?Variable HASHED_PASSWORD not set}
  uat:
    image: 'reportportal/service-authorization:4.2.0'
    depends_on:
      - mongodb
    environment:
      - RP_PROFILES=docker
      - RP_SESSION_LIVE=86400
    restart: always
  gateway:
    image: 'traefik:1.6.6'
    ports:
      - '8080:8080'
      - '433:433'
    command:
      - '--defaultEntryPoints=http,https'
      - '--entrypoints=Name:http Address::8080'
      - '--entrypoints=Name:https Address::443 TLS'
      - '--consulcatalog.endpoint=registry:8500'
      - '--web'
      - '--web.address=:8081'
    restart: always
  index:
    image: 'reportportal/service-index:4.2.0'
    environment:
      - RP_SERVER_PORT=433
      - RP_PROXY_CONSUL=true
    depends_on:
      - registry
      - gateway
    restart: always
  api:
    image: 'reportportal/service-api:4.3.0'
    depends_on:
      - mongodb
    environment:
      - RP_PROFILES=docker
      - 'JAVA_OPTS=-Xmx1g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp'
    restart: always
  ui:
    image: 'reportportal/service-ui:4.3.0'
    environment:
      - RP_SERVER.PORT=433
      - RP_CONSUL.TAGS=urlprefix-/ui opts strip=/ui
      - 'RP_CONSUL.ADDRESS=registry:8500'
    restart: always
  analyzer:
    image: 'reportportal/service-analyzer:4.3.0'
    depends_on:
      - registry
      - gateway
      - elasticsearch
    restart: always
  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.1'
    restart: always
    volumes:
      - './data/elasticsearch:/usr/share/elasticsearch/data'
    environment:
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
  jira:
    image: 'reportportal/service-jira:4.3.0'
    environment:
      - RP_PROFILES=docker
    restart: always
  rally:
    image: 'reportportal/service-rally:4.3.0'
    environment:
      - RP_PROFILES=docker
    restart: always
